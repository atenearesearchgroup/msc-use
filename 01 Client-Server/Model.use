model ClientServerArch

class Client

attributes

operations
end

class Server

attributes

operations
serviceA() begin end
serviceB() begin end
serviceC() begin end
end


association RelClientServer between
Client [0..*] role client
Server [0..1] role server
end

class Choreographer
attributes

operations
server_serviceC(id : String)
begin
(self.client->any(ins: Client_Ch | ins.id = id)).server_serviceC();
end

server_serviceA(id : String)
begin
(self.client->any(ins: Client_Ch | ins.id = id)).server_serviceA();
end

server_serviceB(id : String)
begin
(self.client->any(ins: Client_Ch | ins.id = id)).server_serviceB();
end

end

class Client_Ch < Client
attributes
id : String
operations
server_serviceC()
begin
self.server.serviceC();
end

server_serviceA()
begin
self.server.serviceA();
end

server_serviceB()
begin
self.server.serviceB();
end

end

association Rel_Client_Ch between
Client_Ch [0..*] role client
Choreographer [0..*] role ch
end

