class Choreographer
attributes

operations
server_serviceC(sender : String, receiver : Server)
begin
(self.client->any(ins: Client_Ch | ins.id = sender)).server_serviceC(receiver);
end

server_serviceA(sender : String, receiver : Server)
begin
(self.client->any(ins: Client_Ch | ins.id = sender)).server_serviceA(receiver);
end

server_serviceB(sender : String, receiver : Server)
begin
(self.client->any(ins: Client_Ch | ins.id = sender)).server_serviceB(receiver);
end

end

class Client_Ch < Client
attributes
id : String
operations
server_serviceC(receiver : Server)
begin
receiver.serviceC();
end

server_serviceA(receiver : Server)
begin
receiver.serviceA();
end

server_serviceB(receiver : Server)
begin
receiver.serviceB();
end

end

association Rel_Client_Ch between
Client_Ch [0..*] role client
Choreographer [0..*] role ch
end

